#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

using namespace std;

char  tmp, a[1000001];
int b[1000001];
bool ye;

int main() {
	int n = 0, k = 0;
	scanf("%d", &n);
	scanf(" %c", &a[0]);

	for (int i = 1; i < n; i++) {
		scanf(" %c", &a[i]);
		while (k > 0 && a[i] != a[k])
			k = b[k - 1];
		if (a[k] == a[i])
			k++;
		b[i] = k;
	}

	k = 0;
	int i = 0;

	while (scanf(" %c", &tmp) != EOF) {
		while (k > 0 && tmp != a[k]) {
			k = b[k - 1];
		}
		if (tmp == a[k])
			k++;
		if (k == n) {
			ye = true;
			printf("%d\n", i - n + 1);
			k = b[k - 1];
		}
		i++;
	}

	if (!ye)
		printf("%d\n", -1);

	return 0;
}
/*Поиск подстроки во входном потоке
Напишите программу, которая находит все вхождения заданного шаблона во входную строку.

Формат входных данных
Первая строка входных данных содержит натуральное число N (1 ≤ N ≤ 106) - длину шаблона.
Во второй строке содержится сам шаблон - строка, состоящая только из маленьких букв латинского алфавита.
В третьей строке входных данных содержится входная строка. Ее размер заранее не известен и может быть очень большим.
Входная строка также состоит только из маленьких букв английского алфавита.

Формат результата
Выведите номера всех позиций, начиная с которых шаблон входит в заданную строку.
Позиции нумеруются с нуля. Выводить их необходимо в возрастающем порядке, каждое число в отдельной строке.
Если шаблон не входит в заданную строку, необходимо вывести -1.*/